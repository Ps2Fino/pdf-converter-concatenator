# Automatically generated by Updater v1.0
# @author Daniel J. Finnegan

cmake_minimum_required (VERSION 2.8)
cmake_policy (SET CMP0048 NEW)

project (
    Docx2PDF
    VERSION
        0.1
    LANGUAGES
        NONE
)

option (
    USE_FILE_LIST
    "Use the input file list to specify which documents to convert"
    OFF
)

option (
    SKIP_CONVERSION
    "Skip the conversion step and just concatenate PDFs"
    OFF
)

if (USE_FILE_LIST)

message (
    STATUS
    "Getting the list of files from ./input/file_list.txt..."
)

file (
    TOUCH
    ${CMAKE_SOURCE_DIR}/input/file_list.txt
)

file (
    STRINGS
    ${CMAKE_SOURCE_DIR}/input/file_list.txt
    FILES_TO_CONVERT
)

else ()

message (
    STATUS
    "Using all files located in ./input/..."
)

if (SKIP_CONVERSION)

## Automatic usage through all files in the directory
file (
    GLOB
    FILES_TO_CONVERT
    LIST_DIRECTORIES
        false
    ${CMAKE_SOURCE_DIR}/input/*.pdf
)

else ()

## Automatic usage through all files in the directory
file (
    GLOB
    FILES_TO_CONVERT
    LIST_DIRECTORIES
        false
    ${CMAKE_SOURCE_DIR}/input/*.doc*
)

endif ()

#message (
#    STATUS
#    ${FILES_TO_CONVERT}
#)
#
#message (
#    FATAL_ERROR
#    "Check print"
#)

endif ()

list (
    LENGTH
    FILES_TO_CONVERT
    NUM_FILES_TO_CONVERT
)

if (NUM_FILES_TO_CONVERT GREATER 0)

# Find the essential package
find_package (
    PythonInterp
)

# We call the python script and pass in the file names for conversion
add_custom_target (
    write_tex_file
    ALL
    COMMAND
        ${PYTHON_EXECUTABLE} utils/pdf_concatenate.py ${FILES_TO_CONVERT}
    WORKING_DIRECTORY
        ${CMAKE_SOURCE_DIR}
    COMMENT
        "Writing the tex file..."
)

if (NOT SKIP_CONVERSION)

# We call the python script and pass in the file names for conversion
add_custom_target (
    gen_pdfs
    DEPENDS
        write_tex_file
    COMMAND
        ${PYTHON_EXECUTABLE} utils/docx_to_pdf.py ${FILES_TO_CONVERT}
    WORKING_DIRECTORY
        ${CMAKE_SOURCE_DIR}
    COMMENT
        "Converting the docx files to pdfs..."
)

endif ()

else ()

message (
    FATAL_ERROR
    "Please specify at least one filename in the input file list"
)

endif ()

